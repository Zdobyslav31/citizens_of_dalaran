<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Pagerfanta\Adapter\DoctrineORMAdapter;
use Pagerfanta\Pagerfanta;
use AppBundle\Entity\Text;


/**
 * TextRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TextRepository extends EntityRepository
{
    /**
     * Gets all records paginated.
     *
     * @param int $page Page number
     *
     * @return \Pagerfanta\Pagerfanta Result
     */
    public function findAllPaginated($page = 1)
    {
        $paginator = new Pagerfanta(new DoctrineORMAdapter($this->queryAll(), false));
        $paginator->setMaxPerPage(Text::NUM_ITEMS);
        $paginator->setCurrentPage($page);

        return $paginator;
    }


    /**
     * Query all entities.
     *
     * @return \Doctrine\ORM\QueryBuilder
     */
    protected function queryAll()
    {
        return $this->createQueryBuilder('text');
    }


    /**
     * Query entities of a parent by parent title.
     *
     * @param string $parentTitle Parent title
     *
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function queryByParent($parentTitle)
    {
        $query = $this->createQueryBuilder('text')
            ->where('text.parentTitle = :parent_title')
            ->setParameter('parent_title', $parentTitle)
            ->orderBy('text.number', 'ASC')
            ->getQuery();

        return $query->execute();
    }

    /**
     * Save entity.
     *
     * @param \AppBundle\Entity\Text $text Text entity
     *
     * @throws \Doctrine\ORM\OptimisticLockException
     */
    public function save(Text $text)
    {
        $this->_em->persist($text);
        $this->_em->flush($text);
    }

    /**
     * Delete entity.
     *
     * @param \AppBundle\Entity\Text $text Text entity
     *
     * @throws \Doctrine\ORM\OptimisticLockException
     */
    public function delete(Text $text)
    {
        $this->_em->remove($text);
        $this->_em->flush();
    }
}
